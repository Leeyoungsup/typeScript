"use strict";var __makeTemplateObject=this&&this.__makeTemplateObject||function(e,r){return Object.defineProperty?Object.defineProperty(e,"raw",{value:r}):e.raw=r,e},__awaiter=this&&this.__awaiter||function(e,s,l,i){return new(l=l||Promise)(function(r,t){function n(e){try{a(i.next(e))}catch(e){t(e)}}function o(e){try{a(i.throw(e))}catch(e){t(e)}}function a(e){e.done?r(e.value):function(r){return r instanceof l?r:new l(function(e){e(r)})}(e.value).then(n,o)}a((i=i.apply(e,s||[])).next())})},__generator=this&&this.__generator||function(t,n){var o,a,s,e,l={label:0,sent:function(){if(1&s[0])throw s[1];return s[1]},trys:[],ops:[]};return e={next:r(0),throw:r(1),return:r(2)},"function"==typeof Symbol&&(e[Symbol.iterator]=function(){return this}),e;function r(r){return function(e){return function(r){if(o)throw new TypeError("Generator is already executing.");for(;l;)try{if(o=1,a&&(s=2&r[0]?a.return:r[0]?a.throw||((s=a.return)&&s.call(a),0):a.next)&&!(s=s.call(a,r[1])).done)return s;switch(a=0,s&&(r=[2&r[0],s.value]),r[0]){case 0:case 1:s=r;break;case 4:return l.label++,{value:r[1],done:!1};case 5:l.label++,a=r[1],r=[0];continue;case 7:r=l.ops.pop(),l.trys.pop();continue;default:if(!(s=0<(s=l.trys).length&&s[s.length-1])&&(6===r[0]||2===r[0])){l=0;continue}if(3===r[0]&&(!s||r[1]>s[0]&&r[1]<s[3])){l.label=r[1];break}if(6===r[0]&&l.label<s[1]){l.label=s[1],s=r;break}if(s&&l.label<s[2]){l.label=s[2],l.ops.push(r);break}s[2]&&l.ops.pop(),l.trys.pop();continue}r=n.call(t,l)}catch(e){r=[6,e],a=0}finally{o=s=0}if(5&r[0])throw r[1];return{value:r[0]?r[1]:void 0,done:!0}}([r,e])}}};exports.__esModule=!0;var apollo_server_micro_1=require("apollo-server-micro"),graphql_tools_1=require("graphql-tools"),mongodb_1=require("mongodb");require("dotenv").config();var db,templateObject_1,typeDefs=apollo_server_micro_1.gql(templateObject_1=templateObject_1||__makeTemplateObject(["\n  type User {\n    id: ID!\n    firstName: String!\n    lastName: String!\n    blog: String\n    stars: Int\n  }\n\n  type Query {\n    users: [User]!\n  }\n"],["\n  type User {\n    id: ID!\n    firstName: String!\n    lastName: String!\n    blog: String\n    stars: Int\n  }\n\n  type Query {\n    users: [User]!\n  }\n"])),resolvers={Query:{users:function(e,r,t,n){return t.db.collection("users").findOne().then(function(e){return e.users})}}},schema=graphql_tools_1.makeExecutableSchema({typeDefs:typeDefs,resolvers:resolvers}),apolloServer=new apollo_server_micro_1.ApolloServer({schema:schema,context:function(){return __awaiter(void 0,void 0,void 0,function(){var r,t;return __generator(this,function(e){switch(e.label){case 0:if(db)return[3,5];e.label=1;case 1:return e.trys.push([1,4,,5]),(r=new mongodb_1.MongoClient(process.env.MONGO_DB_URI,{useNewUrlParser:!0,useUnifiedTopology:!0})).isConnected()?[3,3]:[4,r.connect()];case 2:e.sent(),e.label=3;case 3:return db=r.db("next-graphql"),[3,5];case 4:return t=e.sent(),console.log("---\x3eerror while connecting via graphql context (db)",t),[3,5];case 5:return[2,{db:db}]}})})}});exports.config={api:{bodyParser:!1}},exports.default=apolloServer.createHandler({path:"/api/graphql"});
//# sourceMappingURL=graphql.min.js.map
